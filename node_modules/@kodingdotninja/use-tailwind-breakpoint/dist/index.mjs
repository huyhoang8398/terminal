import {
  isBrowser,
  isSSR,
  useIsomorphicEffect
} from "./chunk-AILR37YH.mjs";

// src/index.ts
import {
  useEffect,
  useMemo,
  useRef,
  useState
} from "react";
function create(screens) {
  function useBreakpoint(breakpoint, defaultValue = false) {
    const [match, setMatch] = useState(() => defaultValue);
    const matchRef = useRef(defaultValue);
    useIsomorphicEffect(() => {
      if (!(isBrowser && "matchMedia" in window))
        return void 0;
      function track() {
        var _a;
        const value = (_a = screens[breakpoint]) != null ? _a : "999999px";
        const query = window.matchMedia(`(min-width: ${value})`);
        matchRef.current = query.matches;
        if (matchRef.current != match) {
          setMatch(matchRef.current);
        }
      }
      window.addEventListener("resize", track);
      return () => window.removeEventListener("resize", track);
    });
    return match;
  }
  function useBreakpointEffect(breakpoint, effect) {
    const match = useBreakpoint(breakpoint);
    useEffect(() => effect(match));
    return null;
  }
  function useBreakpointValue(breakpoint, valid, invalid) {
    const match = useBreakpoint(breakpoint);
    const value = useMemo(() => match ? valid : invalid, [invalid, match, valid]);
    return value;
  }
  return {
    useBreakpoint,
    useBreakpointEffect,
    useBreakpointValue
  };
}
var src_default = create;
export {
  create,
  src_default as default,
  isBrowser,
  isSSR,
  useIsomorphicEffect
};
